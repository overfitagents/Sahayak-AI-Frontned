steps:
  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - '-t'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO}/${_SERVICE_NAME}:${_ENV}'
      - '--build-arg=NEXT_PUBLIC_GEMINI_API_KEY=${_NEXT_PUBLIC_GEMINI_API_KEY}'
      - '--build-arg=NEXT_PUBLIC_BACKEND_URL=${_NEXT_PUBLIC_BACKEND_URL}'
      - '--build-arg=NEXT_PUBLIC_VAPID=${_NEXT_PUBLIC_VAPID}'
      - '--build-arg=NEXT_PUBLIC_AUTH_DOMAIN=${_NEXT_PUBLIC_AUTH_DOMAIN}'
      - '--build-arg=NEXT_PUBLIC_PROJECT_ID=${_NEXT_PUBLIC_PROJECT_ID}'
      - '--build-arg=NEXT_PUBLIC_STORAGE_BUCKET=${_NEXT_PUBLIC_STORAGE_BUCKET}'
      - '--build-arg=NEXT_PUBLIC_MESSAGING_SENDER_ID=${_NEXT_PUBLIC_MESSAGING_SENDER_ID}'
      - '--build-arg=NEXT_PUBLIC_APP_ID=${_NEXT_PUBLIC_APP_ID}'
      - .
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO}/${_SERVICE_NAME}:${_ENV}'
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk
    args:
      - run
      - deploy
      - '${_SERVICE_NAME}'
      - '--image'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REPO}/${_SERVICE_NAME}:${_ENV}'
      - '--region'
      - '${_REGION}'
    entrypoint: gcloud
options:
  logging: CLOUD_LOGGING_ONLY
